unbind C-b
set-option -g prefix C-o
bind-key C-o send-prefix

bind C-l send-keys 'C-l' # clear screen

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel "xsel --clipboard"

bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# bind-key -n C-h select-pane -L
# bind-key -n C-j select-pane -D
# bind-key -n C-k select-pane -U
# bind-key -n C-l select-pane -R

set-option -g allow-rename off
# Start counting pane and windows from 1
set -g base-index 1
setw -g pane-base-index 1

# Colour scheme
# Set mode-style for copy mode and message command style
set -g mode-style "fg=#a9b1d6,bg=#2A2F41"
set -g message-style "bg=#7aa2f7,fg=#2A2F41"
set -g message-command-style "fg=#c0caf5,bg=#2A2F41"

# Set pane border and active border style
set -g pane-border-style "fg=#2A2F41"
set -g pane-active-border-style "fg=#7aa2f7"

# Status bar style
set -g status-style bg=#1A1B26
set -g status-right-length 150

# Status bar left (session name)
set -g status-left "#[fg=#1F2335,bg=#6441a5,bold] #{?client_prefix,󰠠 ,#[dim]󰤂 }#[fg=#ffffff,bg=#6441a5,bold,nodim]#S"

# Without this nvim lags after pressing escape
set -sg escape-time 0

# unbind C-b
# set -g prefix C-i
# bind C-l send-keys 'C-l' # clear screen
#
# unbind r
# bind r source-file ~/.config/tmux.conf \; display "Reloaded!"
#
# set -g mouse on
#
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resize panes
bind -n M-k resize-pane -U 5
bind -n M-j resize-pane -D 5
bind -n M-h resize-pane -L 5
bind -n M-l resize-pane -R 5

# unbind -T copy-mode-vi Space;
# unbind -T copy-mode-vi Enter;
# bind -T copy-mode-vi v send-keys -X begin-selection;
# bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel "xsel --clipboard"
#
# set -g base-index 1
#
# # Pane management
# unbind %
# unbind '"'
# bind v split-window -h -c "#{pane_current_path}"
# bind b split-window -v -c "#{pane_current_path}"
#
# set -g history-limit 100000
#
# # Window management
# unbind n
# unbind w
# bind w new-window -c "#{pane_current_path}"
# bind n command-prompt "rename-window '%%'"
#
# # Window navigation
# set-window-option -g pane-base-index 1
# bind-key j previous-window
# bind-key k next-window
# set-window-option -g mode-keys vi
#
# # Colour scheme
# # Set mode-style for copy mode and message command style
# set -g mode-style "fg=#a9b1d6,bg=#2A2F41"
# set -g message-style "bg=#7aa2f7,fg=#2A2F41"
#
# set -g message-command-style "fg=#c0caf5,bg=#2A2F41"
# # Window status formatting
# set -g window-status-current-format "#[fg=#44dfaf,bg=#1F2335]   #[fg=#a9b1d6]#I #[bold,nodim]#W#[nobold,dim]#{?window_zoomed_flag, Z,} #{?window_last_flag,,}"
# set -g window-status-format "#[fg=#c0caf5,bg=default,none,dim]   #I #W#[nobold,dim]#{?window_zoomed_flag, Z,}#[fg=yellow,blink] #{?window_last_flag,󰁯 ,}"
#
# # Status bar right
# # The original script uses external scripts for dynamic content. Here's a simplified version:
# set -g status-right "%Y-%m-%d %H:%M"
#
# # Window status separator
# set -g window-status-separator ""
#
# # nvim cursor
# set -as terminal-overrides ',xterm-kitty:Ss=\E[%p1%d q:Se=\E[2 q'
